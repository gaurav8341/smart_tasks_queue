"""initial migration

Revision ID: 6894a5457b04
Revises: 
Create Date: 2025-06-27 19:50:48.898199

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '6894a5457b04'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('jobs',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('job_id', sa.UUID(), nullable=True),
    sa.Column('job_name', sa.String(), nullable=False),
    sa.Column('type', sa.String(), nullable=False),
    sa.Column('payload', sa.JSON(), nullable=True),
    sa.Column('status', sa.String(), nullable=True),
    sa.Column('cpu_units', sa.Integer(), nullable=True),
    sa.Column('memory_mb', sa.Integer(), nullable=True),
    sa.Column('max_attempts', sa.Integer(), nullable=True),
    sa.Column('backoff_multiplier', sa.DECIMAL(), nullable=True),
    sa.Column('initial_delay', sa.DECIMAL(), nullable=True),
    sa.Column('timeout', sa.Integer(), nullable=True),
    sa.Column('created_time', sa.DateTime(timezone=True), nullable=True),
    sa.Column('modified_time', sa.DateTime(timezone=True), nullable=True),
    sa.Column('priority', postgresql.ENUM('Critical', 'High', 'Normal', 'Low', name='job_priority_enum'), nullable=True),
    sa.Column('times_attempted', sa.Integer(), nullable=True),
    sa.Column('run_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('results', sa.JSON(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_jobs_job_id'), 'jobs', ['job_id'], unique=False)
    op.create_index(op.f('ix_jobs_priority'), 'jobs', ['priority'], unique=False)
    op.create_index(op.f('ix_jobs_run_at'), 'jobs', ['run_at'], unique=False)
    op.create_index(op.f('ix_jobs_status'), 'jobs', ['status'], unique=False)
    op.create_table('execution_logs',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('job_id', sa.Integer(), nullable=False),
    sa.Column('job_uuid', sa.UUID(), nullable=True),
    sa.Column('log_timestamp', sa.DateTime(timezone=True), nullable=False),
    sa.Column('message', sa.String(), nullable=False),
    sa.Column('duration_seconds', sa.DECIMAL(), nullable=True),
    sa.Column('is_successful', sa.Boolean(), nullable=True),
    sa.Column('results', sa.JSON(), nullable=True),
    sa.Column('cpu_units', sa.Integer(), nullable=True),
    sa.Column('memory_mb', sa.Integer(), nullable=True),
    sa.Column('execution_start_time', sa.DateTime(timezone=True), nullable=True),
    sa.Column('execution_end_time', sa.DateTime(timezone=True), nullable=True),
    sa.Column('attempt_number', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['job_id'], ['jobs.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_execution_logs_log_timestamp'), 'execution_logs', ['log_timestamp'], unique=False)
    op.create_table('job_dependencies',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('dependant_id', sa.Integer(), nullable=False),
    sa.Column('depends_on_id', sa.Integer(), nullable=False),
    sa.Column('dependant_uuid', sa.UUID(), nullable=True),
    sa.Column('depends_on_uuid', sa.UUID(), nullable=True),
    sa.CheckConstraint('dependant_id != depends_on_id', name='chk_no_self_dependency'),
    sa.ForeignKeyConstraint(['dependant_id'], ['jobs.id'], ),
    sa.ForeignKeyConstraint(['depends_on_id'], ['jobs.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('dependant_id', 'depends_on_id', name='uq_job_dependency_pair')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('job_dependencies')
    op.drop_index(op.f('ix_execution_logs_log_timestamp'), table_name='execution_logs')
    op.drop_table('execution_logs')
    op.drop_index(op.f('ix_jobs_status'), table_name='jobs')
    op.drop_index(op.f('ix_jobs_run_at'), table_name='jobs')
    op.drop_index(op.f('ix_jobs_priority'), table_name='jobs')
    op.drop_index(op.f('ix_jobs_job_id'), table_name='jobs')
    op.drop_table('jobs')
    # ### end Alembic commands ###
